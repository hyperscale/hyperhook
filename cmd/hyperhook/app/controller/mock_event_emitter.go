// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package controller

import (
	eventemitter "github.com/euskadi31/go-eventemitter"
	mock "github.com/stretchr/testify/mock"
)

// MockEventEmitter is an autogenerated mock type for the EventEmitter type
type MockEventEmitter struct {
	mock.Mock
}

// AddSubscriber provides a mock function with given fields: subscriber
func (_m *MockEventEmitter) AddSubscriber(subscriber eventemitter.EventSubscriber) {
	_m.Called(subscriber)
}

// Dispatch provides a mock function with given fields: name, args
func (_m *MockEventEmitter) Dispatch(name string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, name)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// RemoveSubscriber provides a mock function with given fields: subscriber
func (_m *MockEventEmitter) RemoveSubscriber(subscriber eventemitter.EventSubscriber) {
	_m.Called(subscriber)
}

// Subscribe provides a mock function with given fields: name, listener
func (_m *MockEventEmitter) Subscribe(name string, listener interface{}) {
	_m.Called(name, listener)
}

// Unsubscribe provides a mock function with given fields: name, listener
func (_m *MockEventEmitter) Unsubscribe(name string, listener interface{}) {
	_m.Called(name, listener)
}

// Wait provides a mock function with given fields:
func (_m *MockEventEmitter) Wait() {
	_m.Called()
}
