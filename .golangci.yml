run:
  concurrency: 4
  deadline: 1m
  issues-exit-code: 1
  tests: false
  skip-files:
    - ".*_mock\\.go"
    - "mock_.*\\.go"
    - ".*/pkg/mod/.*$"

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  errcheck:
    check-type-assertions: false
    check-blank: false
  govet:
    check-shadowing: false
  revive:
    ignore-generated-header: true
    severity: warning
  gofmt:
    simplify: true
  gocyclo:
    min-complexity: 18
  maligned:
    suggest-new: true
  dupl:
    threshold: 50
  goconst:
    min-len: 3
    min-occurrences: 2
  depguard:
    list-type: blacklist
    include-go-root: false
    packages:
      - github.com/davecgh/go-spew/spew
  misspell:
    locale: US
    ignore-words:
      - cancelled
  goimports:
    local-prefixes: go.opentelemetry.io

  tagliatelle:
    # check the struck tag name case
    case:
      # use the struct field name to check the name of the struct tag
      use-field-name: false
      rules:
        # any struct tag type can be used.
        # support string case: `camel`, `pascal`, `kebab`, `snake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`
        json: snake
        yaml: snake
        avro: snake
        mapstructure: snake


linters:
  disable-all: true
  enable:
    - deadcode
    - depguard
    - errcheck
    - gas
    - goconst
    - gocyclo
    - gofmt
    - revive
    - govet
    - ineffassign
    - megacheck
    - misspell
    - structcheck
    - typecheck
    - unconvert
    - varcheck
    - gosimple
    - staticcheck
    - unused
    - asciicheck
    - bodyclose
    - dogsled
    - dupl
    - durationcheck
    - errorlint
    - exhaustive
    - exportloopref
    - forbidigo
    - forcetypeassert
    - gocritic
    - godot
    - goerr113
    - gosec
    - ifshort
    - nestif
    - nilerr
    - nlreturn
    - noctx
    - prealloc
    - predeclared
    - sqlclosecheck
    - tagliatelle
    - whitespace
    - wrapcheck
    - wsl
  fast: false
